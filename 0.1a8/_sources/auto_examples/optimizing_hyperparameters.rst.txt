
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/optimizing_hyperparameters.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_optimizing_hyperparameters.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_optimizing_hyperparameters.py:


===================================================================================
Performing cross-validation n times, optimizing SVM's and kernel's hyperparameters.
===================================================================================

Script makes use of :class:`grakel.WeisfeilerLehman`, :class:`grakel.VertexHistogram`

.. GENERATED FROM PYTHON SOURCE LINES 8-35

.. code-block:: default

    from __future__ import print_function
    print(__doc__)

    import numpy as np

    from grakel.datasets import fetch_dataset
    from grakel.utils import cross_validate_Kfold_SVM
    from grakel.kernels import WeisfeilerLehman, VertexHistogram

    # Loads the MUTAG dataset
    MUTAG = fetch_dataset("MUTAG", verbose=False)
    G, y = MUTAG.data, MUTAG.target

    # Generates a list of kernel matrices using the Weisfeiler-Lehman subtree kernel
    # Each kernel matrix is generated by setting the number of iterations of the
    # kernel to a different value (from 2 to 7)
    Ks = list()
    for i in range(1, 7):
    	gk = WeisfeilerLehman(n_iter=i, base_graph_kernel=VertexHistogram, normalize=True)
    	K = gk.fit_transform(G)
    	Ks.append(K)


    # Performs 10-fold cross-validation over different kernels and the parameter C of 
    # SVM and repeats the experiment 10 times with different folds
    accs = cross_validate_Kfold_SVM([Ks], y, n_iter=10)
    print("Average accuracy:", str(round(np.mean(accs[0])*100, 2)) + "%")
    print("Standard deviation:", str(round(np.std(accs[0])*100, 2)) + "%")

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_optimizing_hyperparameters.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: optimizing_hyperparameters.py <optimizing_hyperparameters.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: optimizing_hyperparameters.ipynb <optimizing_hyperparameters.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
